services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network
    restart: always
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ACCESS_KEY=${MINIO_STORAGE_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app_network
    restart: always
  
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network
    restart: always
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    command: bash -c "gunicorn config.wsgi:application --workers=4 --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/staticfiles:/app/staticfiles
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
    depends_on:
      - db
      - rabbitmq
      - minio
    networks:
      - app_network
    restart: always
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"  # Nginx default port
    networks:
      - app_network
    depends_on:
      - backend
      - minio
networks:
    app_network:
      driver: bridge

volumes:
  postgres_data:
  minio_data:
    driver: local
  